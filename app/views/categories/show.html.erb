<!-- hey olivia! so it should have the margin of page_contains found in assets/stylesheets/layouts/page-margins.scss -->
<!-- <div class="page_contains"> -->

<div class="content">
  <div class="container">
        <%= form_tag(category_path(@category.id), method: :get) do %>
          <%= select_tag("search", options_for_select(Experience::AVABILITY),include_blank: true, class: 'form-control search-bar') %>
          <%#= text_field_tag :search %>
          <%= submit_tag 'Search', :name => nil, class: 'btn btn-primary' %>
        <% end %>

        <%#= form_for(@category) do |f| %>

          <%#= f.hidden_field :user_id, :value => @user.id %>

        <%# end %>

    <div class="row">
      <% @experiences.each do |experience| %>
      <div class="col-xs-12 col-sm-4">
        <!-- insert <div class="card"> -->
          <div class="card" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.2)), url('<%= cl_image_path experience.photos.first.path %>');" >
            <div class="card-category"><%= experience.user.name%>
              </div>
                <div class="card-description">
                  <h2><%= experience.title %></h2>
                  <p><%= experience.incentive %></p>
                  <p><%= experience.location %></p>
                </div>
              <%= cl_image_tag(experience.user.photo.path, class: 'card-user') %>
            <a class="card-link" href="<%= new_experience_booking_path(experience_id: experience.id) %>" ></a>
          </div>
        </div>
        <% end %>
      </div>
    </div>


    <div id="map" style="position: relative; overflow: hidden;">
      <div style="height: 100%; width: 100%; position: absolute; top: 0px; left: 0px;">

      </div>
    </div>
</div>

<!-- </div> -->

    <% content_for(:after_js) do %>
      <%= javascript_tag do %>
        $(document).ready(function() {
          var handler = Gmaps.build('Google');
          handler.buildMap({ internal: { id: 'map' } }, function() {
            markers = handler.addMarkers(<%= raw @hash.to_json %>);
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
            if (markers.length == 0) {
              handler.getMap().setZoom(2);
            } else if (markers.length == 1) {
              handler.getMap().setZoom(14);
            }
          });
        });
      <% end %>
    <% end %>




